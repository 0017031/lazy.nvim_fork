*lazy.nvim.txt*          For NVIM v0.5.0         Last change: 2022 December 14

==============================================================================
Table of Contents                                *lazy.nvim-table-of-contents*

1. lazy.nvim                                             |lazy.nvim-lazy.nvim|
  - Features                                              |lazy.nvim-features|
  - Profiler                                              |lazy.nvim-profiler|
  - Debug                                                    |lazy.nvim-debug|
  - Differences with Packer                |lazy.nvim-differences-with-packer|
  - Other Neovim Plugin Managers in Lua|lazy.nvim-other-neovim-plugin-managers-in-lua|

==============================================================================
1. lazy.nvim                                             *lazy.nvim-lazy.nvim*

Modern plugin manager for Neovim

<div class="figure">
<img src="https://user-images.githubusercontent.com/292349/207705153-077e183e-ae5f-4cbe-b1d8-07b7bf86026e.png" title="fig:"/>
<p class="caption">image</p>
</div>

FEATURES                                                  *lazy.nvim-features*


- Manage all your Neovim plugins with a fancy UI
- Fast startup: Automatically caches and compiles byte code of all lua modules needed during startup
- Partial clones instead of shallow clones
- Auto lazy-loading of lua modules
- Lazy-loading on events, commands, filetypes and key mappings
- Automatically installs missing plugins before starting up so you can start using Neovim right away
- Async execution for improved performance
- No need to manually compile plugins
- Correct sequencing of dependencies
- Configurable in multiple files
- Dev option and patterns for using local plugin
- Profiling tools to optimize performance
- Lockfile `lazy-lock.json` to keep track of installed plugin versions
- Automatically check for updates
- Commit, branch, tag, version, and full Semver <https://devhints.io/semver> support
- Statusline component to see the number of pending updates


PROFILER                                                  *lazy.nvim-profiler*

The profiling view shows you why and how long it took to load your plugins.

<div class="figure">
<img src="https://user-images.githubusercontent.com/292349/207703263-3b38ca45-9779-482b-b684-4f8c3b3e76d0.png" title="fig:"/>
<p class="caption">image</p>
</div>

DEBUG                                                        *lazy.nvim-debug*

See an overview of active lazy-loading handlers and whatâ€™s in the module
cache

<div class="figure">
<img src="https://user-images.githubusercontent.com/292349/207703522-8bb20678-bb4c-4424-80e4-add3219711c3.png" title="fig:"/>
<p class="caption">image</p>
</div>

DIFFERENCES WITH PACKER                    *lazy.nvim-differences-with-packer*


- **Plugin Spec**:
    - `setup` => `init`
    - `requires` => `dependencies`
    - `as` => `name`
    - `opt` => `lazy`
    - `run` => `build`
    - `lock` => `pin`
    - `module` is auto-loaded. No need to specify


OTHER NEOVIM PLUGIN MANAGERS IN LUA*lazy.nvim-other-neovim-plugin-managers-in-lua*


- packer.nvim <https://github.com/wbthomason/packer.nvim>
- paq-nvim <https://github.com/savq/paq-nvim>
- neopm <https://github.com/ii14/neopm>
- dep <https://github.com/chiyadev/dep>
- optpack.nvim <https://github.com/notomo/optpack.nvim>
- pact.nvim <https://github.com/rktjmp/pact.nvim>


Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
